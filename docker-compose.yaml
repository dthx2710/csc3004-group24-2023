version: '3'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - 8081:80
    container_name: 'frontend'
    depends_on:
      - gateway

  gateway:
    build:
      context: ./gateway/src
      dockerfile: Dockerfile
    container_name: 'gateway'
    ports:
      - 8080:8080
    depends_on:
      - user-service
      - poll-service
      - result-service
      - vote-producer
      - vote-consumer
    env_file:
      - .env

  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    container_name: 'user-service'
    ports:
      - 50051:50051
    env_file:
      - .env

  poll-service:
    build:
      context: ./poll-service
      dockerfile: Dockerfile
    container_name: 'poll-service'
    ports:
      - 50052:50052
    env_file:
      - .env

  result-service:
    build:
      context: ./result-service
      dockerfile: Dockerfile
    container_name: 'result-service'
    ports:
      - 50053:50053
    env_file:
      - .env

  vote-producer:
    build:
      context: ./vote-service/producer
      dockerfile: Dockerfile
    container_name: 'vote-producer'
    ports:
      - 50054:50054
    depends_on:
      - kafka
    env_file:
      - .env

  vote-consumer:
    build:
      context: ./vote-service/consumer
      dockerfile: Dockerfile
    container_name: 'vote-consumer'
    depends_on:
      - kafka
      - vote-producer
    env_file:
      - .env

  zookeeper:
    image: 'bitnami/zookeeper:latest'
    ports:
      - '2181:2181'
    container_name: 'zookeeper'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: 'bitnami/kafka:latest'
    container_name: 'kafka'
    ports:
      - '9092:9092'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ENABLE_KRAFT=no
      - KAFKA_LISTENERS=PLAINTEXT://:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CREATE_TOPICS=votes:5:2
    depends_on:
      - zookeeper

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: 'nginx'
    ports:
      - 80:8081
    volumes:
    - ./nginx/nginx.conf:/etc/nginx/conf.d/nginx.conf:ro
    depends_on:
      - frontend
      - gateway